{
  "name": "k2hr3-app",
  "version": "1.0.5",
  "dependencies": {
    "@material-ui/core": "^4.12.4",
    "@material-ui/icons": "^4.11.3",
    "ajv": "^8.11.0",
    "body-parser": "^1.20.0",
    "config": "^3.3.7",
    "cookie-parser": "^1.4.6",
    "debug": "^4.3.4",
    "ejs": "^3.1.8",
    "express": "^4.18.1",
    "express-session": "^1.17.3",
    "jose": "^4.8.1",
    "morgan": "^1.10.0",
    "openid-client": "^5.1.6",
    "passport": "^0.6.0",
    "prop-types": "^15.8.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-transition-group": "^4.4.2",
    "rotating-file-stream": "^2.1.6",
    "serve-favicon": "^2.5.0",
    "whatwg-fetch": "^3.6.2"
  },
  "bin": {
    "k2hr3-app": "./bin/www",
    "k2hr3-build-all-licenses": "./bin/build_all_licenses"
  },
  "description": "K2HR3 Web Application is K2hdkc based Resource and Roles and policy Rules",
  "main": "app.js",
  "directories": {
    "bin": "bin",
    "config": "config",
    "public": "public",
    "routes": "routes",
    "src": "src",
    "test": "test",
    "views": "views"
  },
  "devDependencies": {
    "@babel/core": "^7.18.2",
    "@babel/plugin-proposal-class-properties": "^7.17.12",
    "@babel/plugin-proposal-decorators": "^7.18.2",
    "@babel/preset-env": "^7.18.2",
    "@babel/preset-react": "^7.17.12",
    "@babel/eslint-parser": "^7.18.2",
    "babel-jest": "^28.1.1",
    "babel-loader": "^8.2.5",
    "css-loader": "^6.7.1",
    "eslint": "^8.17.0",
    "eslint-plugin-react": "^7.30.0",
    "jest": "^28.1.1",
    "license-checker": "^25.0.1",
    "publish-please": "^5.5.2",
    "react-test-context-provider": "^2.2.0",
    "react-test-renderer": "^17.0.2",
    "style-loader": "^3.3.1",
    "webpack": "^5.73.0",
    "webpack-cli": "^4.9.2"
  },
  "browser": {
    "crypto": false
  },
  "scripts": {
    "help": "echo 'command list:\n    npm run start\n    npm run start:prod\n    npm run start:production\n    npm run start:dev\n    npm run start:develop\n    npm run start:dbg\n    npm run start:debug\n    npm run start:debug:break\n    npm run start:debug:nobreak\n    npm run stop\n    npm run build\n    npm run build:dbg\n    npm run build:all\n    npm run build:all:dbg\n    npm run build:webpack\n    npm run build:webpack:dbg\n    npm run build:license\n    npm run test\n    npm run test:all\n    npm run test:lint\n    npm run test:jest\n    npm run test:update\n    npm run test:watch\n    npm run deploy\n'",
    "start": "npm run start:production",
    "start:prod": "npm run start:production",
    "start:production": "bin/run.sh -bg --production && echo '' && echo 'Start on production - Success' && echo ''",
    "start:dev": "npm run start:develop",
    "start:develop": "echo '' && echo 'Start on development without debugging' && echo '' && bin/run.sh -bg --development",
    "start:dbg": "npm run start:debug",
    "start:debug": "npm run start:debug:break",
    "start:debug:break": "echo '' && echo 'Start on development with debugging' && echo '' && bin/run.sh --development --debug",
    "start:debug:nobreak": "echo '' && echo 'Start on development with debugging no break' && echo '' && bin/run.sh --development --debug-nobrk",
    "stop": "bin/run.sh -stop && echo '' && echo 'Stop - Success' && echo ''",
    "build": "npm run build:all",
    "build:dbg": "npm run build:all:dbg",
    "build:all": "npm run build:license && npm run build:webpack",
    "build:all:dbg": "npm run build:license && npm run build:webpack:dbg",
    "build:webpack": "echo '' && echo 'Start Production Build' && echo '' && webpack --config webpack.config.js --progress --mode production && echo '' && echo 'Production Build - Success' && echo ''",
    "build:webpack:dbg": "echo '' && echo 'Start Development Build' && echo '' && NODE_ENV=development webpack --config webpack.config.js --progress --mode development && echo '' && echo 'Development Build - Success' && echo ''",
    "build:license": "echo '' && echo 'Extract license of dependent libraries' && echo '' && bin/build_all_licenses && echo ''",
    "test": "npm run test:all",
    "test:all": "echo 'All Test - ESLint and JEST' && npm run test:lint && npm run test:jest",
    "test:lint": "echo 'Run ESlint(NOTE: maybe install eslint in global)' && eslint app.js webpack.config.js bin/www routes/*.js routes/*/*.js src/*/*.js src/*.jsx src/*/*.jsx test/*/*.js test/*/*.jsx && echo 'ESlint - Success' && echo ''",
    "test:jest": "echo 'Run JEST' && jest && echo 'JEST - Success' && echo ''",
    "test:update": "echo 'Update JEST snapshot' && jest --updateSnapshot && echo 'Update JEST snapshot - Success' && echo ''",
    "test:watch": "echo 'Start JEST watch' && jest --watch && echo 'Start JEST watch - Success' && echo ''",
    "publish-please": "publish-please",
    "prepublishOnly": "publish-please guard",
    "deploy": "echo 'Deploy github pages for demo' && demo/demo_deploy.sh && echo 'Deploy github pages for demo - Success' && echo ''"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:yahoojapan/k2hr3_app.git"
  },
  "bugs": {
    "url": "https://github.com/yahoojapan/k2hr3_app/issues"
  },
  "homepage": "https://demo.k2hr3.antpick.ax/",
  "keywords": [
    "K2HR3",
    "K2HASH",
    "K2HDKC",
    "CHMPX",
    "ROLE",
    "POLICY",
    "RULE",
    "RESOURCE",
    "express",
    "ejs",
    "webpack",
    "react",
    "babel",
    "material-ui"
  ],
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/test/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/test/__mocks__/styleMock.js"
    },
    "globals": {
      "k2hr3global": {
        "r3apischeme": "http",
        "r3apihost": "localhost",
        "r3apiport": "3000",
        "r3appmenu": "[{\"name\":\"Dummy Menu\",\"url\":\"https://localhost/dummy/menu/\"}]",
        "r3userdata": "\"#include\\n{{= %K2HR3_API_HOST_URI% }}/v1/userdata/TestRegisterPathForJEST\\n\"",
        "username": "test",
        "unscopedtoken": "UnscopedUserToken_ForTestByJEST",
        "dbgheader": "x-k2hr3-debug",
        "dbgvalue": "debug",
        "dbgresheader": "x-k2hr3-error"
      }
    },
    "testEnvironmentOptions": {
      "url": "https://localhost/"
    }
  },
  "babel": {
    "presets": [
      "@babel/preset-env",
      "@babel/preset-react"
    ],
    "plugins": [
      [
        "@babel/plugin-proposal-decorators",
        {
          "legacy": true
        }
      ],
      [
        "@babel/plugin-proposal-class-properties",
        {
          "loose": true
        }
      ],
      [
        "@babel/plugin-proposal-private-methods",
        {
          "loose": true
        }
      ],
      [
        "@babel/plugin-proposal-private-property-in-object",
        {
          "loose": true
        }
      ]
    ]
  },
  "author": [
    "Takeshi Nakatani <ggtakec@gmail.com>"
  ],
  "contributors": [
    "Hirotaka Wakabayashi <hiwakaba@yahoo-corp.jp>"
  ],
  "license": "MIT"
}

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`R3AccountDialog test snapshot for R3AccountDialog 1`] = `
<
  aria-label="account dialog"
  className="MuiDialog-root css-1pivxxs-MuiDialog-root"
  closeAfterTransition={true}
  disableEscapeKeyDown={false}
  disablePortal={true}
  label="account-dialog"
  onClick={[Function]}
  onClose={[Function]}
  open={true}
  slotProps={
    {
      "backdrop": {
        "as": undefined,
        "ownerState": {
          "aria-label": "account dialog",
          "children": [
            <ForwardRef(DialogTitle)
              label="account-dialog"
              sx={{}}
            >
              <ForwardRef(Typography)
                color="primary"
                component="span"
                noWrap={true}
                sx={{}}
                variant="h5"
              >
                Account Information
              </ForwardRef(Typography)>
            </ForwardRef(DialogTitle)>,
            <ForwardRef(DialogContent)
              sx={{}}
            >
              <ForwardRef(Typography)
                color="primary"
                component="span"
                noWrap={true}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="subtitle2"
              >
                User name
              </ForwardRef(Typography)>
              <ForwardRef(Typography)
                color="textSecondary"
                component="span"
                sx={
                  {
                    "paddingLeft": "32px",
                  }
                }
                variant="body1"
              >
                JEST_TEST_USERNAME
              </ForwardRef(Typography)>
              <ForwardRef(Typography)
                color="primary"
                component="span"
                noWrap={true}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="subtitle2"
              >
                Unscoped Token
              </ForwardRef(Typography)>
              <ForwardRef(TextField)
                InputProps={
                  {
                    "sx": {
                      "backgroundColor": "#fff",
                      "color": "rgba(0, 0, 0, 0.6)",
                      "padding": "8px",
                    },
                  }
                }
                disabled={false}
                fullWidth={true}
                inputProps={
                  {
                    "style": {
                      "padding": 0,
                    },
                  }
                }
                inputRef={[Function]}
                maxRows={1}
                minRows={1}
                multiline={false}
                name="unscopedtoken-textfield"
                sx={
                  {
                    "marginBottom": "8px",
                    "paddingLeft": "32px",
                  }
                }
                value="JEST_TEST_UNSCOPED_TOKEN"
                variant="outlined"
              />
              <ForwardRef(Tooltip)
                open={false}
                title="Copy to clipboard"
              >
                <ForwardRef(Button)
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  sx={
                    {
                      "color": "#673ab7",
                      "float": "right",
                      "textTransform": "none",
                    }
                  }
                >
                  <Memo
                    sx={
                      {
                        "marginRight": "8px",
                      }
                    }
                  />
                  Copy to clipboard
                </ForwardRef(Button)>
              </ForwardRef(Tooltip)>
            </ForwardRef(DialogContent)>,
            <ForwardRef(DialogActions)>
              <ForwardRef(Button)
                aria-label="ok"
                color="secondary"
                disabled={false}
                onClick={[Function]}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="contained"
              >
                OK
                <Memo
                  sx={
                    {
                      "marginLeft": "8px",
                    }
                  }
                />
              </ForwardRef(Button)>
            </ForwardRef(DialogActions)>,
          ],
          "disableEscapeKeyDown": false,
          "disablePortal": true,
          "fullScreen": false,
          "fullWidth": true,
          "label": "account-dialog",
          "maxWidth": "sm",
          "onClose": [Function],
          "open": true,
          "scroll": "body",
          "sx": {},
        },
        "ref": null,
        "transitionDuration": {
          "enter": 225,
          "exit": 195,
        },
      },
    }
  }
  slots={
    {
      "backdrop": {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": {
            "TransitionComponent": [Function],
            "children": [Function],
            "className": [Function],
            "classes": [Function],
            "component": [Function],
            "components": [Function],
            "componentsProps": [Function],
            "invisible": [Function],
            "open": [Function],
            "slotProps": [Function],
            "slots": [Function],
            "sx": [Function],
            "transitionDuration": [Function],
          },
          "render": [Function],
        },
        "__emotion_forwardProp": [Function],
        "__emotion_real": [Circular],
        "__emotion_styles": [
          "label:MuiDialog-backdrop;",
          [Function],
          {
            "name": "1mbdz04",
            "next": undefined,
            "styles": "z-index:-1;",
          },
          [Function],
          [Function],
        ],
        "defaultProps": undefined,
        "render": [Function],
        "withComponent": [Function],
      },
    }
  }
>
  <
    appear={true}
    in={true}
    role="presentation"
    timeout={
      {
        "enter": 225,
        "exit": 195,
      }
    }
  >
    <div
      className="MuiDialog-container MuiDialog-scrollBody css-xmd51d-MuiDialog-container"
      onMouseDown={[Function]}
    >
      <div
        aria-labelledby=":r0:"
        aria-modal={true}
        className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollBody MuiDialog-paperWidthSm MuiDialog-paperFullWidth css-155t3jt-MuiPaper-root-MuiDialog-paper"
        role="dialog"
        style={
          {
            "--Paper-shadow": "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          }
        }
      >
        <h2
          className="MuiTypography-root MuiTypography-h6 MuiDialogTitle-root css-1cw1x2b-MuiTypography-root-MuiDialogTitle-root"
          id=":r0:"
          label="account-dialog"
          style={{}}
        >
          <span
            className="MuiTypography-root MuiTypography-h5 MuiTypography-noWrap css-paidjd-MuiTypography-root"
            style={{}}
          >
            Account Information
          </span>
        </h2>
        <div
          className="MuiDialogContent-root css-kw13he-MuiDialogContent-root"
        >
          <span
            className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-noWrap css-m4hrld-MuiTypography-root"
            style={{}}
          >
            User name
          </span>
          <span
            className="MuiTypography-root MuiTypography-body1 css-iraw28-MuiTypography-root"
            style={{}}
          >
            JEST_TEST_USERNAME
          </span>
          <span
            className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-noWrap css-m4hrld-MuiTypography-root"
            style={{}}
          >
            Unscoped Token
          </span>
          <div
            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-naey8y-MuiFormControl-root-MuiTextField-root"
          >
            <div
              className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1fbf57f-MuiInputBase-root-MuiOutlinedInput-root"
              onClick={[Function]}
            >
              <input
                aria-invalid={false}
                autoFocus={false}
                className="MuiInputBase-input MuiOutlinedInput-input css-16wblaj-MuiInputBase-input-MuiOutlinedInput-input"
                disabled={false}
                id=":r1:"
                name="unscopedtoken-textfield"
                onAnimationStart={[Function]}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                style={
                  {
                    "padding": 0,
                  }
                }
                type="text"
                value="JEST_TEST_UNSCOPED_TOKEN"
              />
              <fieldset
                aria-hidden={true}
                className="MuiOutlinedInput-notchedOutline css-1ll44ll-MuiOutlinedInput-notchedOutline"
              >
                <legend
                  className="css-w4cd9x"
                >
                  <span
                    aria-hidden={true}
                    className="notranslate"
                  >
                    â€‹
                  </span>
                </legend>
              </fieldset>
            </div>
          </div>
          <button
            aria-label="Copy to clipboard"
            aria-labelledby={null}
            className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary css-h0an8d-MuiButtonBase-root-MuiButton-root"
            data-mui-internal-clone-element={true}
            disabled={null}
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={0}
            type="button"
          >
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-38d07l-MuiSvgIcon-root"
              data-testid="AssignmentTurnedInRoundedIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M19 3h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1M9.29 16.29 6.7 13.7a.996.996 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0L10 14.17l5.88-5.88c.39-.39 1.02-.39 1.41 0s.39 1.02 0 1.41l-6.59 6.59c-.38.39-1.02.39-1.41 0"
              />
            </svg>
            Copy to clipboard
          </button>
        </div>
        <div
          className="MuiDialogActions-root MuiDialogActions-spacing css-15fu35s-MuiDialogActions-root"
        >
          <button
            aria-label="ok"
            className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSecondary MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSecondary css-clumik-MuiButtonBase-root-MuiButton-root"
            disabled={null}
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={0}
            type="button"
          >
            OK
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-2zpagu-MuiSvgIcon-root"
              data-testid="CheckCircleIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z"
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </>
</>
`;

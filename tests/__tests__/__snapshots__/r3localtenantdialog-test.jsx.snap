// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`R3LocalTenantDialog test snapshot for R3LocalTenantDialog 1`] = `
<
  aria-label="create path dialog"
  className="MuiDialog-root css-1pivxxs-MuiDialog-root"
  closeAfterTransition={true}
  disableEscapeKeyDown={false}
  disablePortal={true}
  label="create-path-dialog"
  onClick={[Function]}
  onClose={[Function]}
  open={true}
  slotProps={
    {
      "backdrop": {
        "as": undefined,
        "ownerState": {
          "aria-label": "create path dialog",
          "children": [
            <ForwardRef(DialogTitle)
              label="create-path-dialog"
              sx={{}}
            >
              <ForwardRef(Typography)
                color="primary"
                component="span"
                noWrap={true}
                sx={{}}
                variant="h5"
              >
                Create a Local TENANT
              </ForwardRef(Typography)>
            </ForwardRef(DialogTitle)>,
            <ForwardRef(DialogContent)
              sx={{}}
            >
              <ForwardRef(Typography)
                color="primary"
                component="span"
                noWrap={true}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="subtitle2"
              >
                TENANT name
              </ForwardRef(Typography)>
              <React.Fragment>
                <ForwardRef(TextField)
                  InputProps={
                    {
                      "sx": {
                        "color": "rgba(0, 0, 0, 0.6)",
                      },
                    }
                  }
                  disabled={false}
                  id="tenant-new-name-textfield-id"
                  inputProps={
                    {
                      "aria-label": "input tenant inforamtion",
                    }
                  }
                  onChange={[Function]}
                  placeholder="Input Local TENANT name"
                  sx={
                    {
                      "paddingLeft": "32px",
                      "paddingRight": "32px",
                      "width": "100%",
                    }
                  }
                  value=""
                />
                <ForwardRef(Typography)
                  color="textSecondary"
                  component="span"
                  sx={
                    {
                      "paddingLeft": "32px",
                    }
                  }
                  variant="body1"
                >
                  (If not "local@" prefix, it is automatically given.)
                </ForwardRef(Typography)>
              </React.Fragment>
              <ForwardRef(Typography)
                color="primary"
                component="span"
                noWrap={true}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="subtitle2"
              >
                Display name
              </ForwardRef(Typography)>
              <ForwardRef(TextField)
                InputProps={
                  {
                    "sx": {
                      "color": "rgba(0, 0, 0, 0.6)",
                    },
                  }
                }
                disabled={false}
                id="tenant-display-name-textfield-id"
                inputProps={
                  {
                    "aria-label": "input tenant inforamtion",
                  }
                }
                onChange={[Function]}
                placeholder="Input Display name for Local TENANT"
                sx={
                  {
                    "paddingLeft": "32px",
                    "paddingRight": "32px",
                    "width": "100%",
                  }
                }
                value=""
              />
              <ForwardRef(Typography)
                color="primary"
                component="span"
                noWrap={true}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="subtitle2"
              >
                Description
              </ForwardRef(Typography)>
              <ForwardRef(TextField)
                InputProps={
                  {
                    "sx": {
                      "color": "rgba(0, 0, 0, 0.6)",
                    },
                  }
                }
                disabled={false}
                id="tenant-description-textfield-id"
                inputProps={
                  {
                    "aria-label": "input tenant inforamtion",
                  }
                }
                onChange={[Function]}
                placeholder="K2HR3 Cluster Local tenant"
                sx={
                  {
                    "paddingLeft": "32px",
                    "paddingRight": "32px",
                    "width": "100%",
                  }
                }
                value=""
              />
              <ForwardRef(Typography)
                color="primary"
                component="span"
                noWrap={true}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="subtitle2"
              >
                TENANT User
              </ForwardRef(Typography)>
              <ForwardRef(Typography)
                color="textSecondary"
                component="span"
                sx={
                  {
                    "display": "inline-block",
                    "paddingLeft": "32px",
                    "width": "calc(100% - 96px)",
                  }
                }
                variant="body1"
              >
                
              </ForwardRef(Typography)>
              <ForwardRef(Popover)
                anchorEl={null}
                anchorOrigin={
                  {
                    "horizontal": "right",
                    "vertical": "bottom",
                  }
                }
                onClose={[Function]}
                open={false}
                sx={{}}
                transformOrigin={
                  {
                    "horizontal": "right",
                    "vertical": "bottom",
                  }
                }
              >
                <ForwardRef(Typography)
                  color="primary"
                  component="span"
                  noWrap={true}
                  sx={
                    {
                      "marginBottom": "8px",
                      "marginLeft": "16px",
                      "marginRight": "16px",
                      "marginTop": "8px",
                    }
                  }
                  variant="subtitle2"
                >
                  MANAGE TENANT USER
                </ForwardRef(Typography)>
                <ForwardRef(Box) />
                <ForwardRef(TablePagination)
                  component="div"
                  count={0}
                  onPageChange={[Function]}
                  page={0}
                  rowsPerPage={5}
                  rowsPerPageOptions={[]}
                />
                <ForwardRef(Button)
                  aria-label="close dialog"
                  color="secondary"
                  disabled={true}
                  onClick={[Function]}
                  sx={
                    {
                      "display": "flex",
                      "float": "right",
                      "margin": "16px",
                    }
                  }
                  variant="contained"
                >
                  UPDATE
                  <Memo
                    sx={
                      {
                        "marginLeft": "8px",
                      }
                    }
                  />
                </ForwardRef(Button)>
              </ForwardRef(Popover)>
              <ForwardRef(Popover)
                anchorEl={null}
                anchorOrigin={
                  {
                    "horizontal": "right",
                    "vertical": "bottom",
                  }
                }
                onClose={[Function]}
                open={false}
                sx={{}}
                transformOrigin={
                  {
                    "horizontal": "right",
                    "vertical": "bottom",
                  }
                }
              >
                <ForwardRef(Typography)
                  color="primary"
                  component="span"
                  noWrap={true}
                  sx={
                    {
                      "marginBottom": "8px",
                      "marginLeft": "16px",
                      "marginRight": "16px",
                      "marginTop": "8px",
                    }
                  }
                  variant="subtitle2"
                >
                  ADD TENANT USER
                </ForwardRef(Typography)>
                <ForwardRef(TextField)
                  InputProps={
                    {
                      "sx": {
                        "color": "rgba(0, 0, 0, 0.6)",
                      },
                    }
                  }
                  disabled={false}
                  id="tenant-user-add-textfield-id"
                  inputProps={
                    {
                      "aria-label": "input tenant inforamtion",
                    }
                  }
                  onChange={[Function]}
                  placeholder="Input user name"
                  sx={
                    {
                      "paddingLeft": "32px",
                      "paddingRight": "32px",
                      "width": "100%",
                    }
                  }
                  value=""
                />
                <ForwardRef(Button)
                  aria-label="close dialog"
                  color="secondary"
                  disabled={true}
                  onClick={[Function]}
                  sx={
                    {
                      "display": "flex",
                      "float": "right",
                      "margin": "16px",
                    }
                  }
                  variant="contained"
                >
                  ADD
                  <Memo
                    sx={
                      {
                        "marginLeft": "8px",
                      }
                    }
                  />
                </ForwardRef(Button)>
              </ForwardRef(Popover)>
              <ForwardRef(Box)
                sx={
                  {
                    "alignItems": "flex-start",
                    "display": "flex",
                    "float": "right",
                  }
                }
              >
                <ForwardRef(Tooltip)
                  open={false}
                  title="edit Users for this Local Tenant"
                >
                  <ForwardRef(IconButton)
                    aria-label="edit users"
                    color="primary"
                    disabled={true}
                    label="edit-users"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    size="large"
                    sx={
                      {
                        "clear": "both",
                        "margin": "0px",
                        "padding": 0,
                      }
                    }
                  >
                    <Memo />
                  </ForwardRef(IconButton)>
                </ForwardRef(Tooltip)>
                <ForwardRef(Tooltip)
                  open={false}
                  title="add User to this Local Tenant"
                >
                  <ForwardRef(Button)
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    sx={
                      {
                        "clear": "both",
                        "marginBottom": "0px",
                        "marginLeft": "0px",
                        "marginRight": "32px",
                        "marginTop": "0px",
                        "minWidth": "32px",
                        "padding": 0,
                      }
                    }
                  >
                    <Memo />
                  </ForwardRef(Button)>
                </ForwardRef(Tooltip)>
              </ForwardRef(Box)>
              <ForwardRef(Typography)
                color="error"
                component="span"
                sx={
                  {
                    "paddingLeft": "32px",
                    "paddingRight": "32px",
                  }
                }
                variant="body1"
              >
                Specify users including yourself at creating a new tenant.
              </ForwardRef(Typography)>
            </ForwardRef(DialogContent)>,
            <ForwardRef(DialogActions)>
              <ForwardRef(Button)
                aria-label="cancel"
                color="primary"
                onClick={[Function]}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="contained"
              >
                CANCEL
                <Memo
                  sx={
                    {
                      "marginLeft": "8px",
                    }
                  }
                />
              </ForwardRef(Button)>
              <ForwardRef(Button)
                aria-label="ok"
                color="secondary"
                disabled={true}
                onClick={[Function]}
                sx={
                  {
                    "marginTop": "16px",
                  }
                }
                variant="contained"
              >
                OK
                <Memo
                  sx={
                    {
                      "marginLeft": "8px",
                    }
                  }
                />
              </ForwardRef(Button)>
            </ForwardRef(DialogActions)>,
            undefined,
          ],
          "disableEscapeKeyDown": false,
          "disablePortal": true,
          "fullScreen": false,
          "fullWidth": true,
          "label": "create-path-dialog",
          "maxWidth": "sm",
          "onClose": [Function],
          "open": true,
          "scroll": "body",
          "sx": {},
        },
        "ref": null,
        "transitionDuration": {
          "enter": 225,
          "exit": 195,
        },
      },
    }
  }
  slots={
    {
      "backdrop": {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": {
            "TransitionComponent": [Function],
            "children": [Function],
            "className": [Function],
            "classes": [Function],
            "component": [Function],
            "components": [Function],
            "componentsProps": [Function],
            "invisible": [Function],
            "open": [Function],
            "slotProps": [Function],
            "slots": [Function],
            "sx": [Function],
            "transitionDuration": [Function],
          },
          "render": [Function],
        },
        "__emotion_forwardProp": [Function],
        "__emotion_real": [Circular],
        "__emotion_styles": [
          "label:MuiDialog-backdrop;",
          [Function],
          {
            "name": "1mbdz04",
            "next": undefined,
            "styles": "z-index:-1;",
          },
          [Function],
          [Function],
        ],
        "defaultProps": undefined,
        "render": [Function],
        "withComponent": [Function],
      },
    }
  }
>
  <
    appear={true}
    in={true}
    role="presentation"
    timeout={
      {
        "enter": 225,
        "exit": 195,
      }
    }
  >
    <div
      className="MuiDialog-container MuiDialog-scrollBody css-xmd51d-MuiDialog-container"
      onMouseDown={[Function]}
    >
      <div
        aria-labelledby=":r0:"
        aria-modal={true}
        className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollBody MuiDialog-paperWidthSm MuiDialog-paperFullWidth css-155t3jt-MuiPaper-root-MuiDialog-paper"
        role="dialog"
        style={
          {
            "--Paper-shadow": "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          }
        }
      >
        <h2
          className="MuiTypography-root MuiTypography-h6 MuiDialogTitle-root css-1cw1x2b-MuiTypography-root-MuiDialogTitle-root"
          id=":r0:"
          label="create-path-dialog"
          style={{}}
        >
          <span
            className="MuiTypography-root MuiTypography-h5 MuiTypography-noWrap css-paidjd-MuiTypography-root"
            style={{}}
          >
            Create a Local TENANT
          </span>
        </h2>
        <div
          className="MuiDialogContent-root css-kw13he-MuiDialogContent-root"
        >
          <span
            className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-noWrap css-m4hrld-MuiTypography-root"
            style={{}}
          >
            TENANT name
          </span>
          <div
            className="MuiFormControl-root MuiTextField-root css-1l0136s-MuiFormControl-root-MuiTextField-root"
          >
            <div
              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorPrimary MuiInputBase-formControl css-1hhje3o-MuiInputBase-root-MuiInput-root"
              onClick={[Function]}
            >
              <input
                aria-invalid={false}
                aria-label="input tenant inforamtion"
                autoFocus={false}
                className="MuiInputBase-input MuiInput-input css-1yrc8ca-MuiInputBase-input-MuiInput-input"
                disabled={false}
                id="tenant-new-name-textfield-id"
                onAnimationStart={[Function]}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Input Local TENANT name"
                required={false}
                type="text"
                value=""
              />
            </div>
          </div>
          <span
            className="MuiTypography-root MuiTypography-body1 css-iraw28-MuiTypography-root"
            style={{}}
          >
            (If not "local@" prefix, it is automatically given.)
          </span>
          <span
            className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-noWrap css-m4hrld-MuiTypography-root"
            style={{}}
          >
            Display name
          </span>
          <div
            className="MuiFormControl-root MuiTextField-root css-1l0136s-MuiFormControl-root-MuiTextField-root"
          >
            <div
              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorPrimary MuiInputBase-formControl css-1hhje3o-MuiInputBase-root-MuiInput-root"
              onClick={[Function]}
            >
              <input
                aria-invalid={false}
                aria-label="input tenant inforamtion"
                autoFocus={false}
                className="MuiInputBase-input MuiInput-input css-1yrc8ca-MuiInputBase-input-MuiInput-input"
                disabled={false}
                id="tenant-display-name-textfield-id"
                onAnimationStart={[Function]}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Input Display name for Local TENANT"
                required={false}
                type="text"
                value=""
              />
            </div>
          </div>
          <span
            className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-noWrap css-m4hrld-MuiTypography-root"
            style={{}}
          >
            Description
          </span>
          <div
            className="MuiFormControl-root MuiTextField-root css-1l0136s-MuiFormControl-root-MuiTextField-root"
          >
            <div
              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorPrimary MuiInputBase-formControl css-1hhje3o-MuiInputBase-root-MuiInput-root"
              onClick={[Function]}
            >
              <input
                aria-invalid={false}
                aria-label="input tenant inforamtion"
                autoFocus={false}
                className="MuiInputBase-input MuiInput-input css-1yrc8ca-MuiInputBase-input-MuiInput-input"
                disabled={false}
                id="tenant-description-textfield-id"
                onAnimationStart={[Function]}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="K2HR3 Cluster Local tenant"
                required={false}
                type="text"
                value=""
              />
            </div>
          </div>
          <span
            className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-noWrap css-m4hrld-MuiTypography-root"
            style={{}}
          >
            TENANT User
          </span>
          <span
            className="MuiTypography-root MuiTypography-body1 css-tntsmj-MuiTypography-root"
            style={{}}
          />
          <
            className="MuiPopover-root css-17ubrvk-MuiPopover-root"
            disableScrollLock={false}
            onClose={[Function]}
            open={false}
            slotProps={
              {
                "backdrop": {
                  "invisible": true,
                },
              }
            }
          >
            <div
              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation8 MuiPopover-paper css-1ixo0aa-MuiPaper-root-MuiPopover-paper"
              style={
                {
                  "--Paper-shadow": "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "opacity": 0,
                  "transform": "scale(0.75, 0.5625)",
                  "visibility": "hidden",
                }
              }
            >
              <span
                className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-noWrap css-e2h3bf-MuiTypography-root"
                style={{}}
              >
                MANAGE TENANT USER
              </span>
              <div
                className="MuiBox-root css-0"
              />
              <div
                className="MuiTablePagination-root css-1hjhadg-MuiTablePagination-root"
              >
                <div
                  className="MuiToolbar-root MuiToolbar-gutters MuiToolbar-regular MuiTablePagination-toolbar css-1gak8h1-MuiToolbar-root-MuiTablePagination-toolbar"
                >
                  <div
                    className="MuiTablePagination-spacer css-1wtxofq-MuiTablePagination-spacer"
                  />
                  <p
                    className="MuiTablePagination-displayedRows css-1iasykk-MuiTablePagination-displayedRows"
                  >
                    0–0 of 0
                  </p>
                  <div
                    className="MuiTablePagination-actions"
                  >
                    <button
                      aria-label="Go to previous page"
                      className="MuiButtonBase-root Mui-disabled MuiIconButton-root Mui-disabled MuiIconButton-colorInherit MuiIconButton-sizeMedium css-12m9zuw-MuiButtonBase-root-MuiIconButton-root"
                      disabled={true}
                      id=":r6:"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onContextMenu={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={-1}
                      title="Go to previous page"
                      type="button"
                    >
                      <svg
                        aria-hidden={true}
                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-14500qs-MuiSvgIcon-root"
                        data-testid="KeyboardArrowLeftIcon"
                        focusable="false"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                        />
                      </svg>
                    </button>
                    <button
                      aria-label="Go to next page"
                      className="MuiButtonBase-root Mui-disabled MuiIconButton-root Mui-disabled MuiIconButton-colorInherit MuiIconButton-sizeMedium css-12m9zuw-MuiButtonBase-root-MuiIconButton-root"
                      disabled={true}
                      id=":r7:"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onContextMenu={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={-1}
                      title="Go to next page"
                      type="button"
                    >
                      <svg
                        aria-hidden={true}
                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-14500qs-MuiSvgIcon-root"
                        data-testid="KeyboardArrowRightIcon"
                        focusable="false"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                        />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
              <button
                aria-label="close dialog"
                className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSecondary Mui-disabled MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSecondary css-177ucpi-MuiButtonBase-root-MuiButton-root"
                disabled={true}
                id=":r8:"
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={-1}
                type="button"
              >
                UPDATE
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-2zpagu-MuiSvgIcon-root"
                  data-testid="CheckCircleIcon"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z"
                  />
                </svg>
              </button>
            </div>
          </>
          <
            className="MuiPopover-root css-17ubrvk-MuiPopover-root"
            disableScrollLock={false}
            onClose={[Function]}
            open={false}
            slotProps={
              {
                "backdrop": {
                  "invisible": true,
                },
              }
            }
          >
            <div
              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation8 MuiPopover-paper css-1ixo0aa-MuiPaper-root-MuiPopover-paper"
              style={
                {
                  "--Paper-shadow": "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "opacity": 0,
                  "transform": "scale(0.75, 0.5625)",
                  "visibility": "hidden",
                }
              }
            >
              <span
                className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-noWrap css-e2h3bf-MuiTypography-root"
                style={{}}
              >
                ADD TENANT USER
              </span>
              <div
                className="MuiFormControl-root MuiTextField-root css-1l0136s-MuiFormControl-root-MuiTextField-root"
              >
                <div
                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorPrimary MuiInputBase-formControl css-1hhje3o-MuiInputBase-root-MuiInput-root"
                  onClick={[Function]}
                >
                  <input
                    aria-invalid={false}
                    aria-label="input tenant inforamtion"
                    autoFocus={false}
                    className="MuiInputBase-input MuiInput-input css-1yrc8ca-MuiInputBase-input-MuiInput-input"
                    disabled={false}
                    id="tenant-user-add-textfield-id"
                    onAnimationStart={[Function]}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="Input user name"
                    required={false}
                    type="text"
                    value=""
                  />
                </div>
              </div>
              <button
                aria-label="close dialog"
                className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSecondary Mui-disabled MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSecondary css-177ucpi-MuiButtonBase-root-MuiButton-root"
                disabled={true}
                id=":ra:"
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={-1}
                type="button"
              >
                ADD
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-2zpagu-MuiSvgIcon-root"
                  data-testid="CheckCircleIcon"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z"
                  />
                </svg>
              </button>
            </div>
          </>
          <div
            className="MuiBox-root css-1sf6uxi"
          >
            <button
              aria-label="edit users"
              aria-labelledby={null}
              className="MuiButtonBase-root Mui-disabled MuiIconButton-root Mui-disabled MuiIconButton-colorPrimary MuiIconButton-sizeLarge css-37bcp-MuiButtonBase-root-MuiIconButton-root"
              data-mui-internal-clone-element={true}
              disabled={true}
              id=":rc:"
              label="edit-users"
              onBlur={[Function]}
              onClick={[Function]}
              onContextMenu={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={-1}
              type="button"
            >
              <svg
                aria-hidden={true}
                className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-14500qs-MuiSvgIcon-root"
                data-testid="EditIcon"
                focusable="false"
                viewBox="0 0 24 24"
              >
                <path
                  d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z"
                />
              </svg>
            </button>
            <button
              aria-label="add User to this Local Tenant"
              aria-labelledby={null}
              className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary css-yzhflk-MuiButtonBase-root-MuiButton-root"
              data-mui-internal-clone-element={true}
              disabled={null}
              id=":re:"
              onBlur={[Function]}
              onClick={[Function]}
              onContextMenu={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              type="button"
            >
              <svg
                aria-hidden={true}
                className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-14500qs-MuiSvgIcon-root"
                data-testid="AddRoundedIcon"
                focusable="false"
                viewBox="0 0 24 24"
              >
                <path
                  d="M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1"
                />
              </svg>
            </button>
          </div>
          <span
            className="MuiTypography-root MuiTypography-body1 css-estwyo-MuiTypography-root"
            style={{}}
          >
            Specify users including yourself at creating a new tenant.
          </span>
        </div>
        <div
          className="MuiDialogActions-root MuiDialogActions-spacing css-15fu35s-MuiDialogActions-root"
        >
          <button
            aria-label="cancel"
            className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary css-8am8uk-MuiButtonBase-root-MuiButton-root"
            disabled={null}
            id=":rf:"
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={0}
            type="button"
          >
            CANCEL
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-2zpagu-MuiSvgIcon-root"
              data-testid="CancelIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z"
              />
            </svg>
          </button>
          <button
            aria-label="ok"
            className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSecondary Mui-disabled MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSecondary css-clumik-MuiButtonBase-root-MuiButton-root"
            disabled={true}
            id=":rg:"
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            OK
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-2zpagu-MuiSvgIcon-root"
              data-testid="CheckCircleIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z"
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </>
</>
`;
